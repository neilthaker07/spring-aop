package edu.sjsu.cmpe275.aop.aspect;

import java.nio.file.AccessDeniedException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;

@Aspect
public class AuthorizationAspect 
{
	@Before("execution(* readBlog(..)) && args(userId, blogUserId)")
	public void reading(JoinPoint joinPoint, String userId, String blogUserId)
	{
		if(!userId.equals(blogUserId) )
		{
			try {
				throw new AccessDeniedException("Blog not for reading");
			} catch (AccessDeniedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	Map<String, HashSet<String>> abc = new HashMap<String, HashSet<String>>();
	
	@Before("execution(* shareBlog(..)) && args(userId, blogUserId, targetUserId)")
	public void sharing(JoinPoint joinPoint, String userId, String blogUserId, String targetUserId)
	{
		if(!userId.equals(blogUserId) )
		{
			
		}
	}
	
	@After("execution(* shareBlog(..)) && args(userId, blogUserId, targetUserId)")
	public void sharingToUser(JoinPoint joinPoint, String userId, String blogUserId, String targetUserId)
	{
		HashSet<String> q = new HashSet<String>();
		q.add(targetUserId);
		abc.put(blogUserId, );
	}
	
}
